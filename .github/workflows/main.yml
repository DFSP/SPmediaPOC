# GitHub Actions 워크플로우 이름
name: Build and Deploy to GitHub Pages

# 언제 이 Action을 실행할지 결정합니다.
on:
  push:
    branches: [ "main" ] # main 브랜치에 코드가 push(업로드)될 때마다 실행
  workflow_dispatch: # Actions 탭에서 수동으로 실행 가능하도록 설정

# 워크플로우에 필요한 권한을 명시적으로 부여합니다.
permissions:
  contents: read
  pages: write
  id-token: write

# 동시에 여러 배포가 실행되는 것을 방지합니다.
concurrency:
  group: "pages"
  cancel-in-progress: false

# 실행될 작업(Job)들을 정의합니다.
jobs:
  # 배포 작업
  deploy:
    # 배포 환경을 'github-pages'로 명시적으로 지정합니다.
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # 작업이 실행될 OS 환경을 지정합니다.
    runs-on: ubuntu-latest
    # 작업의 단계(Steps)들을 정의합니다.
    steps:
      # 1. 저장소의 코드를 다운로드합니다.
      - name: Checkout
        uses: actions/checkout@v4

      # 2. [수정됨] awk 명령어가 백틱 없는 placeholder를 찾도록 수정
      - name: Replace Firebase Config
        run: |
          CONFIG_JSON='${{ secrets.FIREBASE_CONFIG }}'
          awk -v config="$CONFIG_JSON" '{gsub(/__firebase_config/, config)}1' index.html > index.html.tmp && mv index.html.tmp index.html
        
      # 3. GitHub Pages를 설정합니다.
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      # 4. 배포할 결과물을 업로드합니다.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      # 5. 최종 결과물을 GitHub Pages에 배포합니다.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
